{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"utils/Apis\"","webpack:///external \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack:///external \"@babel/runtime/helpers/getPrototypeOf\"","webpack:///external \"@babel/runtime/helpers/inherits\"","webpack:///external \"axios\"","webpack:///external \"lodash\"","webpack:///./src/utils/Validator.js","webpack:///./src/utils/Apis.js","webpack:///./src/lib/Index.js","webpack:///./src/lib/Query.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","Validator","tronStation","this","tronWeb","utils","address","isAddress","Error","_","Apis","amount","parseFloat","undefined","str","pos","len","length","hexA","substr","v","parseInt","push","arr","_arr","one","toString","match","bytesLength","store","slice","st","String","fromCharCode","resource","defaultAddress","hex","getResourcesByName","resources","keys","trx","getAccountResources","accountResources","getChainParametersByName","param","getChainParameters","params","proposal","filter","axios","Query","soter","timestamp","Date","parse","data","user_address","base58","sign","toHex","JSON","stringify","headers","url","method","response","console","log","error","Soter","apis","validator","query"],"mappings":"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","file":"Soter-sdk.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"utils/Apis\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"axios\");","module.exports = require(\"lodash\");","export default class Validator {\n\n    constructor(tronStation) {\n        this.tronWeb = tronStation.tronWeb;\n        this.utils = this.tronWeb.utils;\n    }\n\n    validateAddress(address) {\n        if (!this.tronWeb.isAddress(address))\n            throw new Error('Invalid address provided.');\n    }\n};","const _ = require(\"lodash\");\nexport default class Apis {\n\n    constructor(tronStation) {\n        this.tronWeb = tronStation.tronWeb;\n        this.utils = this.tronWeb.utils;\n    }\n\n    toTrx(amount) {\n        return parseFloat(amount) / 10e5;\n    }\n\n    fromTrx(amount) {\n        return amount * 10e5;\n    }\n\n    filterData(value) {\n        return value === undefined ? 0 : value;\n    }\n\n    hexStringToBytes(str) {\n        let pos = 0;\n        let len = str.length;\n        if (len % 2 !== 0) {\n            return null;\n        }\n        len /= 2;\n        let hexA = [];\n        for (let i = 0; i < len; i++) {\n            let s = str.substr(pos, 2);\n            let v = parseInt(s, 16);\n            hexA.push(v);\n            pos += 2;\n        }\n        return hexA;\n    }\n\n    byteToString (arr) {\n        if (typeof arr === \"string\") {\n            return arr;\n        }\n        var str = \"\",\n            _arr = arr;\n        for (var i = 0; i < _arr.length; i++) {\n            var one = _arr[i].toString(2),\n                v = one.match(/^1+?(?=0)/);\n            if (v && one.length === 8) {\n                var bytesLength = v[0].length;\n                var store = _arr[i].toString(2).slice(7 - bytesLength);\n                for (var st = 1; st < bytesLength; st++) {\n                    store += _arr[st + i].toString(2).slice(2);\n                }\n                str += String.fromCharCode(parseInt(store, 2));\n                i += bytesLength - 1;\n            } else {\n                str += String.fromCharCode(_arr[i]);\n            }\n        }\n        return str;\n    }\n    async getResourceByName(resource, address = this.tronWeb.defaultAddress.hex) {\n        switch (resource) {\n            case 'EnergyWeight': {\n                resource = 'TotalEnergyWeight';\n                break;\n            }\n            case 'BandwidthWeight': {\n                resource = 'TotalNetWeight';\n                break;\n            }\n            case 'BandwidthLimit': {\n                resource = 'TotalNetLimit';\n                break;\n            }\n            default:\n                throw new Error('Invalid resource type provided.');\n        };\n\n        const resources = await this.getResourcesByName([resource], address);\n        if (!resources || Object.keys(resources).length === 0)\n            throw new Error('Get resource failed.')\n        return resources[resource];\n    }\n\n    async getResourcesByName(resources, address = this.tronWeb.defaultAddress.hex) {\n        if (!this.tronWeb.isAddress(address))\n            throw new Error('Invalid address provides.')\n\n        const accountResources = await this.tronWeb.trx.getAccountResources(address);\n        if (!accountResources)\n            throw new Error('Get resource failed.');\n\n        let object = {};\n        for (let i = 0; i < resources.length; i++) {\n            object[resources[i]] = accountResources[resources[i]];\n        }\n\n        return object;\n    }\n\n    async getChainParameterByName(key) {\n        const param = await this.getChainParametersByName([key]);\n        if(!param)\n            throw new Error('Get chain parameter failed.');\n        return param[key];\n    }\n\n    async getChainParametersByName(keys) {\n        const params = await this.tronWeb.trx.getChainParameters();\n\n        let object = {};\n        for (let i = 0; i < keys.length; i++) {\n            const proposal = _.filter(params, ['key', keys[i]])[0];\n            if (proposal) object[keys[i]] = proposal['value'];\n        }\n\n        return object;\n    }\n\n};","const axios = require('axios');\nimport Soter from '../index';\nimport Validator from '../utils/Validator';\nimport Apis from '../utils/Apis';\n\nexport default class Index {\n\n    constructor(soter) {\n        if (!soter || !(soter instanceof Soter))\n            throw new Error('Expected instance of TronStation');\n        this.axios = axios\n        this.soter = soter;\n        this.tronWeb = soter.tronWeb;\n        this.apis = new Apis(this.soter);\n        this.validator = new Validator(this.soter);\n    }\n\n}","import Index from './Index';\n\nexport default class Query extends Index {\n\n    constructor(soter) {\n        super(soter);\n        this.soter = soter\n        this.tronWeb = this.soter.tronWeb\n    }\n\n    async userBalance() {\n        let timestamp = Date.parse( new Date())/1000;\n        \n        let data = {\n            user_address:  this.tronWeb.defaultAddress.base58,\n            timestamp: timestamp\n        }\n\n        let signature = await this.tronWeb.trx.sign( this.tronWeb.toHex(JSON.stringify(data)));\n\n        let rawdata = {\n            user_address: this.tronWeb.defaultAddress.base58,\n            raw_data: data,\n            signature: signature\n        }\n       \n        try {\n            const response = await this.axios({\n                headers: {\n                    'Content-Type': 'application/json;charset=UTF-8'\n                },\n                url: `http://localhost:8101/api/v1/balance`,\n                method: 'get'\n            });\n            console.log(response);\n            return response.data\n\n          } catch (error) {\n            console.error(error);\n          }\n       \n    }\n\n    async queryUserDepositHistory() {\n\n    }\n\n    async queryUserOrderList() {\n\n    }\n\n    async queryUserUploadedFiles() {\n\n    }\n\n}","import Query from 'lib/Query'\nimport Apis from 'utils/Apis';\nexport default class Soter {\n    constructor(tronWeb = false) {\n        if(!tronWeb){\n            throw new Error('Expected instance of TronWeb');\n        }\n\n        if (!tronWeb.defaultAddress){\n            throw new Error('Expected default account set up in TronWeb');\n        }\n\n        this.tronWeb = tronWeb;\n        this.apis = new Apis(this);\n        this.query = new Query(this);\n\n    }\n\n    setTronWeb(tronWeb = false) {\n        if (!tronWeb)\n            throw new Error('Expected instance of TronWeb');\n        if (!tronWeb.defaultAddress)\n            throw new Error('Expected default account set up in TronWeb');\n        this.tronWeb = tronWeb;\n        this.defaultAddress = tronWeb.defaultAddress;\n        this.apis = new Apis(this);\n        this.query = new Query(this);\n    }\n}"],"sourceRoot":""}